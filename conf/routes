# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                           controllers.HomeController.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)


# Server Ping & Static text response
GET     /ping                       controllers.PingController.ping

# Standard HTTP responses

GET     /responses/ok               controllers.StandardResponsesController.okResponse
GET     /responses/not-found        controllers.StandardResponsesController.notFound
GET     /responses/bad-request      controllers.StandardResponsesController.badRequest
GET     /responses/5xx              controllers.StandardResponsesController.internalServerError
GET     /responses/4xx              controllers.StandardResponsesController.custoemStatusResponse
GET     /responses/old-action       controllers.StandardResponsesController.oldAction
GET     /responses/new-action       controllers.StandardResponsesController.newAction
GET     /responses/todo             controllers.StandardResponsesController.actionTobeImplemented

# Routing experiments
# Interestingly the following types work for play as parameters
# String
# Int
# Long
# Double
# Float
# Boolean
# UUID
# AnyVal wrappers for other supported types
GET     /routing/echo/:content      controllers.RoutingController.echo(content: String)
GET     /routing/page/:pageNo       controllers.RoutingController.page(pageNo: Int)
# Get the page by name
GET     /routing/pagebyname       controllers.RoutingController.pageByName(pagename = "home")
GET     /routing/pagebyname/:pagename       controllers.RoutingController.pageByName(pagename: String)
# Get the first page by default
GET     /routing/page               controllers.RoutingController.page(pageNo: Int ?= 1)
GET     /routing/getpage/:pageNo      controllers.RoutingController.getPage(pageNo: Int)
# This is a modifier, here it skips CSRF token verification
+ nocsrf
POST    /routing/skip-csrf          controllers.RoutingController.skipCsrfFilter
# Matching multiple parts separated by /
GET     /routing/download/*filepath    controllers.RoutingController.multiPathMatch(filepath)
# Parameter
GET     /routing/parameter              controllers.RoutingController.parameter(name: String, age: Int)
# Optional parameters
GET     /routing/optional    controllers.RoutingController.optionalParameter(version: Option[String])
GET     /routing/list-parameters        controllers.RoutingController.listParameter(item: List[String])
GET     /routing/reverse-route                 controllers.RoutingController.reverseRouting
# Use a different router for the path /api
# ->      /api                        api.MyRouter
# Relative routes
GET     /routing/relative/:name               controllers.RoutingController.relative(name: String)
GET     /routing/relativeDemo                 controllers.RoutingController.relativeDemo


# Default controller
# Play includes a Default controller which provides a handful of useful actions.
GET   /about      controllers.Default.redirect(to = "https://www.playframework.com/")
GET   /orders     controllers.Default.notFound
GET   /clients    controllers.Default.error
GET   /posts      controllers.Default.todo


# Response formats and modifications

GET     /response/text               controllers.ResponseController.textResponse
GET     /response/xml                controllers.ResponseController.xmlResponse
GET     /response/html               controllers.ResponseController.htmlResponse
GET     /response/headers            controllers.ResponseController.httpHeaders

# Setting and removing cookie
GET     /response/set-cookie         controllers.ResponseController.setCookie
GET     /response/unset-cookie         controllers.ResponseController.unsetCookie
# Using custom charset in the response
GET     /response/charset            controllers.ResponseController.charset